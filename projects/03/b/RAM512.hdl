// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[6..8], a=R1Load, b=R2Load, c=R3Load, d=R4Load, e=R5Load, f=R6Load, g=R7Load, h=R8Load);
    RAM64(in=in[0..15], load=R1Load, address=address[0..5], out=R1Out);
    RAM64(in=in[0..15], load=R2Load, address=address[0..5], out=R2Out);
    RAM64(in=in[0..15], load=R3Load, address=address[0..5], out=R3Out);
    RAM64(in=in[0..15], load=R4Load, address=address[0..5], out=R4Out);
    RAM64(in=in[0..15], load=R5Load, address=address[0..5], out=R5Out);
    RAM64(in=in[0..15], load=R6Load, address=address[0..5], out=R6Out);
    RAM64(in=in[0..15], load=R7Load, address=address[0..5], out=R7Out);
    RAM64(in=in[0..15], load=R8Load, address=address[0..5], out=R8Out);
    Mux8Way16(a=R1Out, b=R2Out, c=R3Out, d=R4Out, e=R5Out, f=R6Out, g=R7Out, h=R8Out, sel=address[6..8], out=out);
}